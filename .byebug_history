continue
@ses.finalphases.first
@ses.finalphases
@ses
session
continue
self.opinions.all
self.opinions
self
self.opinions
continue
@array = @array.shuffle
@array.shuffle!
@array.shuffle
@array
continue
@array
continue
opinions.shuffle!
opinions.shuffle
opinions
self.opinions
self.opinions = self.opinions.shuffle
self.opinions
self.opinions.all.shuffle
self.opinions.all.methods
self.opinions.all.shuffle
self.opinions.all
self.opinions.methods
self.opinions
self.opinions.all
self.opinions.all.shuffle!
self.opinions.all.shuffle
self.opinions.all
self.opinions.array
self.opinions.shuffle!
self.opinions
self.opinions.shuffle
self.opinions
continue
self.opinions.shuffle
self.opinions.shuffle!
self.opinions.shuffle
self.opinions
continue
@phase.opinions.last.mark
@phase.opinions.last
@phase.opinions
@phase.session
continue
self.methods
self
selg
seòf
self
phases_url(Phase.last)
phases_url(phase)
continue
self.methods
redirect_to self.phases.first
self.phases.first
continue
params[:opinion][:mark]
params[:opinion[:mark]]
params[:opinion]
Opinion.find(params[:id])
params
params[:opinion]
Opinion.find(params[:opinion])
params[:opinion]
params[:opinion].mark
params[:opinion]
params
self.opinion
opinion
mark
params[:mark]
self
continue
[:opinion]
mark
:mark
continue
range_field(:mark, in:0..100)
continue
form_for(opinion)
form_for
continue

continue
f
continue
find_element(:css, 'input[ng-model="MyModel"]')
driver
self.methods
self
find_element(:css => '.detailslink a')
find_element
continue
@vote.value
@vote
continue
Opinion.find(params[:opinion])
continue
Opinion.find(params[:opinion])
continue
Opinion.find(params[:opinion])
continue
Opinion.find(params[:opinion])
continue
@opinion
continue
params[:vote]
continue
self.params[:vote]
self.params
self.ò
self.vote
self
params
param
params
params.action
params.vote
params
params.
params.vote
params
params(:vote)
params(vote)
params()
params(:vote)
params([:vote])
params
continue
Phase.last.session.phases
Phase.last.session
Phase.last
Phase
@phase
continue
@phase
continue
@phase.music.sound
@phase.music
@phase
continue
@phase.picture.image
@phase.picture
picture
continue
@phase
continue
phase
@phase
continue
Phase.find(3)
Phase.all
Phase
phase
continue
phase.music
phase.picture
phase
continue
phase.picture.name
phase.picture
phase
continue
self.opinions.create(word: Word.last)
self.opinions.last
self.opinions
self
continue
self.opinions.create(word: Word.last)
Word.last
Word.all
Word
self.opinions.create(word: Word.last)
Word
continue
Word
self.opinions.create(word: Word.last)
self.opinions.create
self.opinions.crate
self.opinions
continue
self.opinions.create
self.opinions
self.word
self.words
self
phase
continue
@sessione1.phases.count
@sessione1.phases
@sessione1.phase
@sessione1
continue
@sessione1.phases.count
@sessione1.phases
@sessione1
continue
@session.phases.create(music: Music.last)
@session.phases.create(music :Music.last)
@session.phases.create(:music Music.last)
@session.phases.create(:music = Music.last)
@session.phases
@session
self.phases
self
continue
@session
session
continue
@session.create_Phases
@session
@session = Session.find(params[:id])
@session = Session.find(:id)
@session = Session(:id)
Session
Session.last
Ssession.last
sessions.last
session.last
session.create_Phases
session
continue
@session.phases
@session
continue
<d
@session.phases
@session
continue
Music.first
Music
Paintings
Paint
Paints
@session
Paints
@session
continue
@session.create_Phases
@session.phases
@session
continue
@session
continue
@ses.phases
@ses
continue
@ses
@ses.phase
@ses.phases
